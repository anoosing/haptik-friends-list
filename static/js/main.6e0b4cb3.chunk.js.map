{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","getData","fetch","headers","then","response","json","friendsJson","setState","friendsList","friendsListDefault","componentDidMount","updateFriendName","event","friendName","target","value","addFriend","addToList","state","concat","name","isFavourite","searchFriendText","preventDefault","searchFriend","filteredFriends","filter","friend","toLowerCase","includes","pageCount","className","type","placeholder","this","onChange","onSubmit","map","index","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","handlePageClick","containerClassName","activeClassName","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+UAwGeA,EApGf,kDAEE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,QAAU,WACRC,MAAM,uBACF,CACAC,QAAS,CACP,eAAgB,mBAChB,OAAU,sBAIbC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAAG,GAAW,OAAI,EAAKC,SAAS,CAAEC,YAAaF,EAAaG,mBAAoBH,QApBpE,EAsBnBI,kBAAoB,WAClB,EAAKV,WAvBY,EAyBnBW,iBAAmB,SAACC,GAClB,EAAKL,SAAS,CAAEM,WAAYD,EAAME,OAAOC,SA1BxB,EA6BnBC,UAAY,SAACJ,GAEX,IAAIK,EAAY,EAAKC,MAAMT,mBAAmBU,OAAO,CAAC,CAAEC,KAAM,EAAKF,MAAML,WAAYQ,aAAa,KAClG,EAAKd,SAAS,CAAEe,iBAAkB,GAAIT,WAAY,GAAIL,YAAaS,EAAWR,mBAAoBQ,IAClGL,EAAMW,kBAjCW,EAmCnBC,aAAe,SAACZ,GACd,EAAKL,SAAS,CAAEe,iBAAkBV,EAAME,OAAOC,QAC/C,IAAIU,EAAkB,EAAKP,MAAMT,mBAAmBiB,QAAO,SAAAC,GAAM,OAAIA,EAAOP,KAAKQ,cAAcC,SAASjB,EAAME,OAAOC,MAAMa,kBAC3H,EAAKrB,SAAS,CAAEC,YAAaiB,KApC7B,EAAKP,MAAQ,CACXL,WAAY,GACZL,YAAa,GACbC,mBAAoB,GACpBa,iBAAkB,GAClBQ,UAAW,GAPI,EAFrB,0CA0CE,WACE,OACE,qBAAKC,UAAU,UAAf,SACE,sBAAKA,UAAU,4BAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,uBAAMA,UAAU,cAAhB,UACE,sBAAMA,UAAU,QAAhB,SAAwB,+CACxB,uBAAOA,UAAU,8BAA8BC,KAAK,OAAOC,YAAY,kBACrElB,MAAOmB,KAAKhB,MAAMI,iBAAkBa,SAAUD,KAAKV,eAErD,sBAAMO,UAAU,oBAAhB,SACE,mBAAGA,UAAU,wBAInB,sBAAMK,SAAUF,KAAKlB,UAArB,SACE,uBAAOe,UAAU,mBAAmBC,KAAK,OAAOC,YAAY,2BAC1DlB,MAAOmB,KAAKhB,MAAML,WAAYsB,SAAUD,KAAKvB,qBAGjD,8BAEIuB,KAAKhB,MAAMV,YAAY6B,KAAI,SAACV,EAAQW,GAAT,OAEzB,sBAAKP,UAAU,eAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,8BAAMJ,EAAOP,OACb,qBAAKW,UAAU,aAAf,+BAEF,sBAAKA,UAAU,qBAAf,UACE,mBAAGA,UAAU,iBACb,mBAAGA,UAAU,qBAPkBO,QAczC,qBAAKP,UAAU,yBAAf,SACE,cAAC,IAAD,CACEQ,cAAe,IACfC,UAAW,IACXC,WAAY,MACZC,eAAgB,WAChBZ,UAAWI,KAAKhB,MAAMY,UACtBa,qBAAsB,EACtBC,mBAAoB,EACpBC,aAAcX,KAAKY,gBACnBC,mBAAoB,aACpBC,gBAAiB,sBA3F/B,GAAyBC,IAAMC,WCQhBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlD,MAAK,YAAkD,IAA/CmD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6e0b4cb3.chunk.js","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport ReactPaginate from 'react-paginate';\nexport class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      friendName: \"\",\n      friendsList: [],\n      friendsListDefault: [],\n      searchFriendText: \"\",\n      pageCount: 2\n    }\n  }\n  getData = () => {\n    fetch('mockFriendsData.json'\n      , {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }\n    )\n      .then((response) => response.json())\n      .then(friendsJson => this.setState({ friendsList: friendsJson, friendsListDefault: friendsJson }))\n  }\n  componentDidMount = () => {\n    this.getData();\n  }\n  updateFriendName = (event) => {\n    this.setState({ friendName: event.target.value });\n    // console.log(this.state.friendName);\n  }\n  addFriend = (event) => {\n    // console.log(this.state.friendName);\n    let addToList = this.state.friendsListDefault.concat([{ name: this.state.friendName, isFavourite: false }]);\n    this.setState({ searchFriendText: \"\", friendName: \"\", friendsList: addToList, friendsListDefault: addToList });\n    event.preventDefault();\n  }\n  searchFriend = (event) => {\n    this.setState({ searchFriendText: event.target.value });\n    let filteredFriends = this.state.friendsListDefault.filter(friend => friend.name.toLowerCase().includes(event.target.value.toLowerCase()));\n    this.setState({ friendsList: filteredFriends });\n  }\n  render() {\n    return (\n      <div className=\"friends\">\n        <div className=\"container friends-wrapper\">\n          <div className=\"friends-list-label\">\n            <span className=\"input-group\">\n              <span className=\"label\"><b>Friends List</b></span>\n              <input className=\"search-friends form-control\" type=\"text\" placeholder=\"Search friend's\"\n                value={this.state.searchFriendText} onChange={this.searchFriend}>\n              </input>\n              <span className=\"input-group-addon\">\n                <i className=\"fa fa-search\"></i>\n              </span>\n            </span>\n          </div>\n          <form onSubmit={this.addFriend}>\n            <input className=\"add-friend-input\" type=\"text\" placeholder=\"Enter your friend's name\"\n              value={this.state.friendName} onChange={this.updateFriendName}>\n            </input>\n          </form>\n          <div>\n            {\n              this.state.friendsList.map((friend, index) =>\n              (\n                <div className=\"friends-list\" key={index}>\n                  <div className=\"friend-list-name\">\n                    <div>{friend.name}</div>\n                    <div className=\"small-font\">is your friend</div>\n                  </div>\n                  <div className=\"friends-list-icons\">\n                    <i className=\"fa fa-star-o\"></i>\n                    <i className=\"fa fa-trash\"></i>\n                  </div>\n                </div>\n              )\n              )\n            }\n          </div>\n          <div className=\"friends-list-paginator\">\n            <ReactPaginate\n              previousLabel={'<'}\n              nextLabel={'>'}\n              breakLabel={'...'}\n              breakClassName={'break-me'}\n              pageCount={this.state.pageCount}\n              marginPagesDisplayed={2}\n              pageRangeDisplayed={5}\n              onPageChange={this.handlePageClick}\n              containerClassName={'pagination'}\n              activeClassName={'active'}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/bootstrap.min.css';\nimport './assets/css/fontawesome.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}